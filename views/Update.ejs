<!DOCTYPE html>
<html lang="en">

<head>
  <title>Home</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
    integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

  <style>
    .multiselect {
      width: 100%;
    }

    .selectBox {
      position: relative;
    }

    .selectBox select {
      width: 100%;
    }

    .overSelect {
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;

    }

    #mySelectOptions {
      display: none;
      border: 0.5px #7c7c7c solid;
      background-color: #ffffff;
      max-height: 150px;
      overflow-y: scroll;
    }

    #mySelectOptions label {
      display: block;
      font-weight: normal;
      display: block;
      white-space: nowrap;
      min-height: 1.2em;
      background-color: #ffffff00;
      color: #000;
      padding: 0 2.25rem 0 .75rem;
      /* padding: .375rem 2.25rem .375rem .75rem; */
    }

    #mySelectOptions label:hover {
      background-color: #1e90ff;
    }

    * {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
    }

    body {
      padding: 0;
      margin: 0;
      background: #141e30;
    }

    .navbar {
      background: #243b55;
    }

    .nav-link,
    .navbar-brand {
      color: #fff;
      cursor: pointer;
      font-size: larger;
    }

    .nav-link {
      margin-right: 1em !important;
    }

    .nav-link:hover {
      color: #000;
    }

    .navbar-collapse {
      justify-content: flex-end;


    }

    .row1 {
      background: rgb(247, 247, 247);
      border-radius: 30px;
      box-shadow: 12px 12px 22px grey;
    }

    .header {
      background: linear-gradient(to bottom, #89cf43, #5aa84f, #3e8e41);
      background-size: cover;
      background-position: center;
      position: relative;
    }

    .Form {
      background-color: white;
      border-radius: 30px;
      opacity: 90%;
      min-height: 75vh;
      min-width: 100vh;
      max-width: 150vh;
      margin: 40px auto 0;
      /* add margin to the top */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

    }

    .Forminfo {
      background-color: white;
      border-radius: 30px;
      opacity: 90%;
      min-height: 50vh;
      min-width: 75vh;
      max-width: 100vh;
      margin: 20px auto 0px;
      /* add margin to the top */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

    }

    .select option {
      font-size: 12px;
    }

    .container {
      height: 100%;
    }

    .form-control {
      font-size: 14px;
    }

    .form-control select {
      z-index: 2;
    }

    .form-control select option {
      z-index: 1;
    }

    .row {
      height: 100%;
      box-shadow: 12px 12px 22px rgb(207, 199, 199);
    }

    .overlay {
      position: absolute;
      min-height: 100%;
      min-width: 100%;
      left: 0;
      top: 0;
      background: rgba(246, 239, 239, 0.6);
    }

    .description {
      left: 50%;
      position: absolute;
      top: 45%;
      transform: translate(-50%, -55%);
      text-align: center;
    }

    .description h1 {
      color: #6ab446;
    }

    .description p {
      color: #fff;
      font-size: 1.3rem;
      line-height: 1.5;

    }

    .description button {
      border: 1px solid #6ab446;
      background: #6ab446;
      border-radius: 0;
      color: #fff;
    }

    .description button:hover {
      border: 1px solid #fff;
      background: #fff;
      color: #000;
    }

    .description a {
      border: 1px solid #6ab446;
      background: #6ab446;
      border-radius: 0;
      color: #fff;
    }

    .description button:hover {
      border: 1px solid #fff;
      background: #fff;
      color: #000;
    }

    .btn1 {
        background: whitesmoke;
      border: 1px solid;
      color: black;
    }

    .btn1:hover {
      background: #03e9f4;
      color: #0e0c0c;
      border-radius: 5px;
      box-shadow: 0 0 5px #03e9f4,
        0 0 25px #03e9f4,
        0 0 50px #03e9f4,
        0 0 100px #03e9f4;
    }

    .btn1{
      background: #010101;
  color: #f0e1e1;
  font-size:large;
    }

    .container {
      min-height: 100vh;
      padding: 50px;
      opacity: 80%;
    }

    select option {
      font-size: 14px;
    }

    select option:current {
      font-size: 8px;
    }

    select {
      height: 50px;
      width: 400px;
    }

    label {
      font-family: 'Times New Roman', Times, serif;

      font-size: 35px;
      font-weight: bold;
      color: #f6eded;
    }

    .input1 {
      font-size: 12px;
    }

    .hidden {
      display: none;
    }

    .divform {
      background-color: white;
      border-radius: 30px;
      opacity: 90%;
      margin: 40px auto 0;
      /* add margin to the top */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    .form-row label {
      font-size: x-large;
      font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
      color: white;
    }


    .form-row {
      font-size: 20px;
      color: white;
    }
    .form-row .mySelectOptions{
      color: #000;
    }

  </style>
</head>
<script>

  document.addEventListener('DOMContentLoaded', () => {
    const selectDrop = document.querySelector('#countries');


    const countryList = document.getElementById('country');
    fetch('https://restcountries.com/v2/all')
      .then(response => response.json())
      .then(data => {
        data.forEach(country => {
          const option = document.createElement('option');
          option.value = country.name;
          option.text = country.name;
          countryList.add(option);
        });
      });

    const cityList = document.getElementById('city');
    fetch('https://psgc.gitlab.io/api/island-groups/luzon/cities')
      .then(response => response.json())
      .then(data => {
        data.forEach(city => {
          const option1 = document.createElement('option');
          option1.value = city.name;
          option1.text = city.name;
          cityList.add(option1);
        });
      });

    const regionList = document.getElementById('region');
    fetch('https://psgc.gitlab.io/api/island-groups/luzon/regions')
      .then(response => response.json())
      .then(data => {
        data.forEach(region => {
          const option1 = document.createElement('option');
          option1.value = region.name;
          option1.text = region.name;
          regionList.add(option1);
        });
      });

  });
  function toggleSection() {
    var formSection = document.getElementById("viewinfo-section");
    var studentSection = document.getElementById("students-section");

    var buttonValue = document.querySelector('button[name="updateinfo"]')

    if (formSection.style.display === "none") {
      formSection.style.display = "block";
      studentSection.style.display = "none";
    } else {
      formSection.style.display = "none";
      studentSection.style.display = "block";
    }
  }

</script>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"
  integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"
  integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>

<nav class="navbar navbar-expand-md">
  <a class="navbar-brand" href="home.ejs">
  </a>
  <button class="navbar-toggler navbar-dark" type="button" data-toggle="collapse" data-target="#main-navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="main-navigation">
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" href="/homepage">HOME</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/addinfo">MY DATA</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/viewing">VIEW DATA</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/logout">LOGOUT</a>
      </li>
    </ul>
  </div>
</nav>


<!-- Your HTML code for each student here -->

<section id="students-section">

    <div class="container">
      <div class="row justify-content-center align-items-center">
        
          <form method="post" action="/admineditinfo">
            <% if(typeof errors !=='undefined' && errors.length> 0) { %>
              <% errors.forEach(function(error) { %>
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                  <li>
                    <%= error %>
                  </li>
                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <% }) %>
                  <% } %>
                    <% if(errorMessages) { %>
                      <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <li>
                          <%= errorMessages %>
                        </li>
                      </div>
                      <% } %>

                        <input type="hidden" name="infoId"
                          value="<%= filteredStudents.length > 0 ? filteredStudents[0].id : '' %>">
                        <div class="form-row">
                          <div class="col-lg-7">
                           <br><br><h1>UPDATE</h1>
                            <label>Last Name</label><br>
                            <input type="text" name="lastname" placeholder="First name" class="form-control my-3 p-4"
                              value="<%= filteredStudents.length > 0 ? filteredStudents[0].lastname : '' %>" readonly
                              required>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>First Name</label><br>
                            <input type="text" name="firstname" placeholder="First name" class="form-control my-3 p-4"
                              value="<%= filteredStudents.length > 0 ? filteredStudents[0].firstname : '' %>" readonly
                              required>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Middle Name</label><br>
                            <input type="text" name="middlename" placeholder="Middle Name" class="form-control my-3 p-4"
                              value="<%= filteredStudents.length > 0 ? filteredStudents[0].middlename : '' %>" readonly
                              required>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Address</label><br>
                            <input type="text" name="address" placeholder="Address" class="form-control my-3 p-4"
                              value="<%= filteredStudents.length > 0 ? filteredStudents[0].address : '' %>" required>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Country</label><br>
                            <select name="country" placeholder="country" class="form-control my-3 p-2" id="country"
                              name="country" required>
                              <option value="">
                                <%= filteredStudents.length> 0 ? filteredStudents[0].country : '' %>
                              </option>
                            </select>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Region</label><br>
                            <select name="region" placeholder="region" class="form-control my-3 p-2" id="region"
                              name="region" required>
                              <option class="options" value="">
                                <%= filteredStudents.length> 0 ? filteredStudents[0].region : '' %>
                              </option>
                            </select>
                          </div>
                        </div>


                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>City:</label><br>
                            <select name="city" placeholder="city" class="form-control my-3 p-2" id="city" name="city"
                              required>
                              <option value="">
                                <%= filteredStudents.length> 0 ? filteredStudents[0].city : '' %>
                              </option>
                            </select>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-4">
                            <% const zipcode=filteredStudents.length> 0 ? filteredStudents[0].zipcode : '' %>
                              <input type="text" name="zipcode" placeholder="Zipcode" class="form-control my-3 p-4"
                                value="<%= zipcode %>" readonly required>
                          </div>
                        </div>


                        <div class="form-row">
                          <div class="col-lg-7">
                            <% const birthdate=filteredStudents.length> 0 ? new
                              Date(filteredStudents[0].birthdate).toISOString().substring(0, 10) : '' %>
                              <input type="date" name="birthdate" placeholder="Birthdate" class="form-control my-3 p-4"
                                value="<%= birthdate %>" required>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Gender:</label><br>
                            <input class="input1" type="radio" name="gender" value="male" required> Male<br>
                            <input class="input1" type="radio" name="gender" value="female" required> Female<br>
                          </div>
                        </div>

                        <div class="form-row">
                          <div class="col-lg-7">
                            <label>Civil Status:</label><br>
                            <input type="radio" name="civil_status" value="single" required> Single<br>
                            <input type="radio" name="civil_status" value="married" required> Married<br>
                            <input type="radio" name="civil_status" value="divorced" required> Divorced<br>
                            <input type="radio" name="civil_status" value="widowed" required> Widowed<br><br>
                          </div>
                        </div>

                        <div class="form-row">

                          <label for="myMultiselect">Select Hobbies</label>
                          <div id="myMultiselect" class="multiselect">
                            <div id="mySelectLabel" class="selectBox" onclick="toggleCheckboxArea()">
                              <select class="form-select form-control browser-default custom-select">
                                <option>somevalue</option>
                              </select>
                              <div class="overSelect"></div>
                            </div>
                            <div id="mySelectOptions">
                              <label for="one"><input name="hobby" type="checkbox" id="one"
                                  onchange="checkboxStatusChange()" value="Dancing" /> Dancing </label>
                              <label for="two"><input name="hobby" type="checkbox" id="two"
                                  onchange="checkboxStatusChange()" value="Watching" /> Watching</label>
                              <label for="three"><input name="hobby" type="checkbox" id="three"
                                  onchange="checkboxStatusChange()" value="Cooking" /> Cooking</label>
                              <label for="four"><input name="hobby" type="checkbox" id="four"
                                  onchange="checkboxStatusChange()" value="Writing" /> Writing</label>
                              <label for="five"><input name="hobby" type="checkbox" id="five"
                                  onchange="checkboxStatusChange()" value="Playing" /> Playing </label>
                              <label for="six"><input name="hobby" type="checkbox" id="six"
                                  onchange="checkboxStatusChange()" value="Listening" /> Listening</label>
                              <label for="seven"><input name="hobby" type="checkbox" id="seven"
                                  onchange="checkboxStatusChange()" value="Drawing" /> Drawing</label>
                              <label for="eight"><input name="hobby" type="checkbox" id="eight"
                                  onchange="checkboxStatusChange()" value="Gardening" /> Gardening</label>
                              <label for="nine"><input name="hobby" type="checkbox" id="nine"
                                  onchange="checkboxStatusChange()" value="Programming" /> Programming</label>
                              <label for="ten"><input name="hobby" type="checkbox" id="ten"
                                  onchange="checkboxStatusChange()" value="Traveling" /> Traveling</label>
                              <label for="other"><input name="hobby" type="checkbox" id="other"
                                  onchange="checkboxStatusChange()" value="Other" /> Other</label>
                              <input type="text" id="otherText" class="form-control" placeholder="Please specify"
                                style="display: none;">


                            </div>
                          </div>
                        </div>


                        <div class="form-row">
                          <div class="col-lg-7">
                            <button type="submit" value="updateinfo" class="btn1 mt-3 mb-5">UPDATE</button>
                          </div>
                        </div>

          </form>
 
      </div>
    </div>
    </div>
  </section>
</section>

</body>

<script>
  window.onload = (event) => {
    initMultiselect();
  };

  function initMultiselect() {
    checkboxStatusChange();

    document.addEventListener("click", function (evt) {
      var flyoutElement = document.getElementById('myMultiselect'),
        targetElement = evt.target; // clicked element

      do {
        if (targetElement == flyoutElement) {
          // This is a click inside. Do nothing, just return.
          //console.log('click inside');
          return;
        }

        // Go up the DOM
        targetElement = targetElement.parentNode;
      } while (targetElement);

      // This is a click outside.
      toggleCheckboxArea(true);
      //console.log('click outside');
    });
  }

  function checkboxStatusChange() {
    var multiselect = document.getElementById("mySelectLabel");
    var multiselectOption = multiselect.getElementsByTagName('option')[0];

    var values = [];
    var checkboxes = document.getElementById("mySelectOptions");
    var checkedCheckboxes = checkboxes.querySelectorAll('input[type=checkbox]:checked');

    var otherCheckbox = document.getElementById("other");


    // Get the "Other" checkbox and the "Other" text field

    var otherTextField = document.getElementById("otherText");

    // Listen for changes to the text field
    otherTextField.addEventListener("input", function () {
      // If the text field is not empty, check the "Other" checkbox and set its value to the text field value
      if (otherTextField.value != "") {
        otherCheckbox.checked = true;
        otherCheckbox.value = otherTextField.value;
      }
      // If the text field is empty, uncheck the "Other" checkbox and clear its value
      else {
        otherCheckbox.checked = false;
        otherCheckbox.value = "";
      }
    });


    if (otherCheckbox.checked) {
      otherText.style.display = "block";
    } else {
      otherText.style.display = "none";
    }

    for (const item of checkedCheckboxes) {
      var checkboxValue = item.getAttribute('value');
      values.push(checkboxValue);
    }

    var dropdownValue = "Nothing is selected";
    if (values.length > 0) {
      dropdownValue = values.join(', ');
    }

    multiselectOption.innerText = dropdownValue;
  }

  function toggleCheckboxArea(onlyHide = false) {
    var checkboxes = document.getElementById("mySelectOptions");
    var displayValue = checkboxes.style.display;

    if (displayValue != "block") {
      if (onlyHide == false) {
        checkboxes.style.display = "block";
      }
    } else {
      checkboxes.style.display = "none";
    }
  }
</script>

</html>